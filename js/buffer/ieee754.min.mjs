/*!@license BSD-3-Clause License Copyright 2008 Fair Oaks Labs, Inc. Copyright (c) Feross Aboukhadijeh, and other contributors. | @license MIT Copyright (c) 2021 Lauro Moraes <https://github.com/subversivo58>*/
function read(a,b,c,f,g){let h,j;const k=8*g-f-1,l=(1<<k)-1,n=l>>1;let o=-7,p=c?g-1:0;const q=c?-1:1;let d=a[b+p];for(p+=q,h=d&(1<<-o)-1,d>>=-o,o+=k;0<o;)h=256*h+a[b+p],p+=q,o-=8;for(j=h&(1<<-o)-1,h>>=-o,o+=f;0<o;)j=256*j+a[b+p],p+=q,o-=8;if(0===h)h=1-n;else{if(h===l)return j?NaN:(d?-1:1)*(1/0);j+=Math.pow(2,f),h-=n}return(d?-1:1)*j*Math.pow(2,h-f)}function write(a,b,f,g,h,j){let k,l,n,o=8*j-h-1;const p=(1<<o)-1,q=p>>1,r=23===h?Math.pow(2,-24)-Math.pow(2,-77):0;let t=g?0:j-1;const u=g?1:-1,d=0>b||0===b&&0>1/b?1:0;for(b=Math.abs(b),isNaN(b)||b===1/0?(l=isNaN(b)?1:0,k=p):(k=Math.floor(Math.log(b)/Math.LN2),1>b*(n=Math.pow(2,-k))&&(k--,n*=2),b+=1<=k+q?r/n:r*Math.pow(2,1-q),2<=b*n&&(k++,n/=2),k+q>=p?(l=0,k=p):1<=k+q?(l=(b*n-1)*Math.pow(2,h),k+=q):(l=b*Math.pow(2,q-1)*Math.pow(2,h),k=0));8<=h;)a[f+t]=255&l,t+=u,l/=256,h-=8;for(k=k<<h|l,o+=h;0<o;)a[f+t]=255&k,t+=u,k/=256,o-=8;a[f+t-u]|=128*d}export default{read,write};